allprojects {
	repositories {
		jcenter()
    }	    
	group = 'com.acuo.collateral'
	version = '1.0'
}

def loadConfiguration() {
	def profile = hasProperty('profile') ? profile : 'dev'
	ext.profile = profile
	def configFile = file('config.groovy')
	def config = new ConfigSlurper(profile).parse(configFile.toURL())
	ext.config = config
}

configure (subprojects) {
	loadConfiguration()
	profile = profile //inject property into sub-project
	config = config     
}

subprojects { Project subproject ->
	subproject.apply plugin: 'java'
	subproject.apply plugin:'groovy'
	subproject.apply plugin:'eclipse'
	subproject.apply plugin:'idea'
	subproject.apply plugin:'project-report'
	subproject.apply plugin:'osgi'
	subproject.apply plugin:'maven-publish'
	subproject.apply plugin:'jacoco'
	
	subproject.repositories {
		mavenCentral()
		jcenter()
		mavenLocal()
	}

	subproject.dependencies {
		compile (
			'com.google.inject:guice:[4,)',
			'org.slf4j:slf4j-api:1.7.13',
			'org.apache.commons:commons-lang3:3.4',
			'commons-lang:commons-lang:2.6',
			'com.google.guava:guava:19.0'
		)
		testCompile (
			'org.codehaus.groovy:groovy-all:[2,3)',
			'junit:junit:4.12',
        	'org.mockito:mockito-core:2.0.52-beta',
        	'info.solidsoft.mockito:mockito-java8:2.0.0-beta.2',
        	'org.assertj:assertj-core:3.4.1',
			'org.spockframework:spock-core:0.7-groovy-2.0'
		)
	}

	subproject.sourceCompatibility = 1.8
	subproject.targetCompatibility = 1.8

	subproject.task('sourcesJar', type: Jar, dependsOn: subproject.classes) {
			classifier = 'sources'
			subproject.sourceSets.each { SourceSet ss ->
				from ss.allSource
			}
	}

	subproject.task('javadocJar', type: Jar, dependsOn: javadoc) {
			classifier = 'javadoc'
			from javadoc.destinationDir
	}

	subproject.artifacts {
			archives subproject.sourcesJar, subproject.javadocJar
	}

	subproject.publishing {
			publications {
					mavenJava(MavenPublication) {
							if (plugins.hasPlugin('war')) {
									from components.web
							} else {
									from components.java
							}

							artifact sourcesJar {
									classifier "sources"
							}

							artifact javadocJar {
									classifier "javadoc"
							}
					}
			}
	}

	subproject.tasks.javadoc {
		options.links(
			"http://docs.oracle.com/javase/8/docs/api/",
			"https://google-guice.googlecode.com/git/javadoc/"
		)
		options.linkSource true
	}
}