apply from: "$rootDir/gradle/java-plugins.gradle"
apply from: "$rootDir/gradle/dependencies.gradle"
apply from: "$rootDir/gradle/integration-test.gradle"

ext.versions += [
	guice: '4.0',
	jackson: '2.7.4',
	resteasy: '3.0.16.Final'	
]

apply plugin: 'application'

mainClassName = 'com.acuo.collateral.ResteasyMain'
applicationDefaultJvmArgs = [ "-Dacuo.config.appid=${config.appId}",
                              "-Dacuo.config.env=${config.env}"]

/*
startScripts {

    // Support closures to add an additional element to 
    // CLASSPATH definition in the start script files.
    def configureClasspathVar = { findClasspath, pathSeparator, resource, line ->

        // Looking for the line that starts with either CLASSPATH=
        // or set CLASSPATH=, defined by the findClasspath closure argument.
        line = line.replaceAll(~/^${findClasspath}=.*$/) { original ->

            // Get original line and append it 
            // with the configuration directory.
            // Use specified path separator, which is different
            // for Windows or Unix systems.
            original += "${pathSeparator}${resource}"
        }

    }

    def configureUnixClasspath = configureClasspathVar.curry('CLASSPATH', ':', "${config.dataDir}")
    def configureWindowsClasspath = configureClasspathVar.curry('set CLASSPATH', ';', "${config.dataDir}")

    // The default script content is generated and
    // with the doLast method we can still alter
    // the contents before the complete task ends.
    doLast {

        // Alter the start script for Unix systems.
        unixScript.text = 
            unixScript
                .readLines()
                .collect(configureUnixClasspath)
                .join('\n')

        // Alter the start script for Windows systems.
        windowsScript.text = 
            windowsScript
                .readLines()
                .collect(configureWindowsClasspath)
                .join('\r\n')

    }
}
*/

distributions {
    main {
        contents {
            from('src/main/webapp') {
                into 'webapp'
            }
            from('src/main/resources/graph-data') {
                into 'webapp/graph-data'
            }
            from('src/main/resources/config') {
                into 'data/config'
            }
        }
    }
}

task printProperties << {
    println config.appId
    println config.env
    println versions.resteasy
    println versions.slf4j
    println versions.guice
	println versions.guava
	println versions.jackson
}

dependencies {
    compile project(':common')    
    compile (        
        "org.glassfish.jersey.containers:jersey-container-grizzly2-servlet:2.22.2",
        "org.glassfish.jersey.media:jersey-media-json-jackson:2.22.2",
        "org.glassfish.jersey.core:jersey-client:2.22.2",
        "org.glassfish.hk2:hk2:2.4.0",
        "org.glassfish.hk2:guice-bridge:2.4.0",
        "org.codehaus.jackson:jackson-mapper-asl:1.9.13",
        
        "org.neo4j:neo4j-ogm-core:2.0.1",
        "org.neo4j:neo4j-ogm-http-driver:2.0.1",
        "org.neo4j:neo4j-ogm-embedded-driver:2.0.1",
        "org.neo4j:neo4j-kernel:2.3.3",
                
        "com.google.inject:guice:${versions.guice}",
		"com.google.inject.extensions:guice-servlet:${versions.guice}",
        "com.google.inject.extensions:guice-persist:${versions.guice}",		
		"com.google.inject.extensions:guice-assistedinject:${versions.guice}",
		
		"com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${versions.jackson}",
        "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${versions.jackson}",
        
		"org.jboss.resteasy:resteasy-jaxrs:${versions.resteasy}",
		"org.jboss.resteasy:resteasy-guice:${versions.resteasy}",
		"org.jboss.resteasy:resteasy-jackson2-provider:${versions.resteasy}",
		
		"com.smokejumperit.guice:core:1.1",
		"io.jsonwebtoken:jjwt:0.6.0",
        "org.mindrot:jbcrypt:0.3m",
    )

    testCompile project(path: ':common', configuration: 'tests')
    testCompile (
        "com.graphaware.neo4j:tests:2.3.3.37",
        "org.neo4j:neo4j-ogm-test:2.0.1",
        "org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:2.22.2",
        "com.jayway.jsonpath:json-path-assert:2.2.0"
    )
}