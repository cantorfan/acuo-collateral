buildscript {
    repositories {
        jcenter()
    }
    sourceSets {
    	integrationTest {
        	java {
        	    compileClasspath += main.output + test.output
        	    runtimeClasspath += main.output + test.output
            	srcDir file('src/integration-test/java')
        	}
        	resources.srcDir file('src/integration-test/resources')
    	}
	}
	configurations {
    	integrationTestCompile.extendsFrom testCompile
    	integrationTestRuntime.extendsFrom testRuntime
	}  
	dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:2.6.8'
    }    
}

apply plugin: 'jetty'
apply plugin: 'application'
apply plugin: 'com.bmuschko.docker-java-application'
 

mainClassName = 'com.acuo.collateral.Bootstrap'

applicationDefaultJvmArgs = [ "-Dneo4j.ogm.url=$config.neo4jServerName",
                              "-Dneo4j.ogm.username=",
                              "-Dneo4j.ogm.password=",
                              "-Dneo4j.ogm.driver=org.neo4j.ogm.drivers.http.driver.HttpDriver",
                              "-Dneo4j.ogm.packages=com.acuo.collateral.model",                                                   
                              "-Dacuo.data.dir=$config.dataDir",
                              "-Dacuo.webapp.host=0.0.0.0",
                              "-Dacuo.webapp.root=$config.webappRoot"
                            ]

distributions {
    main {
        contents {
            from('src/main/webapp') {
                into 'webapp'
            }
            from('src/main/resources') {
                into 'data'
            }
        }
    }
}
                            
stopPort = 9451
stopKey = 'stop'

jettyRun.doFirst {
    logger.quiet('Starting Jetty...')
}

jettyRun {
    scanIntervalSeconds = 5
    contextPath = 'acuo'
}

docker {
    javaApplication {
        maintainer = 'Hicham Medkouri "info@anaxo.io"'
        port = 8080
    }
}

dependencies {
    compile project(':common')
    compile (        
        'org.glassfish.jersey.containers:jersey-container-grizzly2-servlet:2.22.2',
        'org.glassfish.jersey.media:jersey-media-json-jackson:2.22.2',
        'org.glassfish.jersey.core:jersey-client:2.22.2',
        'io.jsonwebtoken:jjwt:0.6.0',
        'org.mindrot:jbcrypt:0.3m',
        'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.7.3',
        'org.neo4j:neo4j-ogm-core:2.0.1',
        'org.neo4j:neo4j-ogm-http-driver:2.0.1',
        'org.neo4j:neo4j-ogm-embedded-driver:2.0.1',
        'org.neo4j:neo4j-kernel:2.3.3',
        'ch.qos.logback:logback-classic:1.1.7',
        'org.glassfish.hk2:guice-bridge:2.4.0',
        'com.google.inject.extensions:guice-servlet:3.0',
        'com.google.inject.extensions:guice-persist:3.0',
        'org.glassfish.hk2:hk2:2.4.0',
        'org.codehaus.jackson:jackson-mapper-asl:1.9.13',
        'com.smokejumperit.guice:core:1.1'
    )

    testCompile project(path: ':common', configuration: 'tests')
    testCompile (
        'com.graphaware.neo4j:tests:2.3.3.37',
        'org.neo4j:neo4j-ogm-test:2.0.1'   
    )
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}